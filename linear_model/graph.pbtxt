node {
  name: "global_step/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Fill"
  input: "global_step/Initializer/zeros/shape_as_tensor"
  input: "global_step/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1096
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1096
          }
        }
        string_val: "input/training/n3/n3049.jpg"
        string_val: "input/training/n3/n3133.jpg"
        string_val: "input/training/n3/n3170.jpg"
        string_val: "input/training/n3/n3064.jpg"
        string_val: "input/training/n3/n3135.jpg"
        string_val: "input/training/n3/n3043.jpg"
        string_val: "input/training/n3/n3070.jpg"
        string_val: "input/training/n3/n3038.jpg"
        string_val: "input/training/n3/n3063.jpg"
        string_val: "input/training/n3/n3121.jpg"
        string_val: "input/training/n3/n3116.jpg"
        string_val: "input/training/n3/n3039.jpg"
        string_val: "input/training/n3/n3050.jpg"
        string_val: "input/training/n3/n3037.jpg"
        string_val: "input/training/n3/n3051.jpg"
        string_val: "input/training/n3/n3071.jpg"
        string_val: "input/training/n3/n3128.jpg"
        string_val: "input/training/n3/n3062.jpg"
        string_val: "input/training/n3/n3075.jpg"
        string_val: "input/training/n3/n3171.jpg"
        string_val: "input/training/n3/n3113.jpg"
        string_val: "input/training/n3/n3028.jpg"
        string_val: "input/training/n3/n3168.jpg"
        string_val: "input/training/n3/n3141.jpg"
        string_val: "input/training/n3/n3055.jpg"
        string_val: "input/training/n3/n3136.jpg"
        string_val: "input/training/n3/n3132.jpg"
        string_val: "input/training/n3/n3160.jpg"
        string_val: "input/training/n3/n3166.jpg"
        string_val: "input/training/n3/n3162.jpg"
        string_val: "input/training/n3/n3042.jpg"
        string_val: "input/training/n3/n3137.jpg"
        string_val: "input/training/n3/n3023.jpg"
        string_val: "input/training/n3/n3154.jpg"
        string_val: "input/training/n3/n3110.jpg"
        string_val: "input/training/n3/n3054.jpg"
        string_val: "input/training/n3/n3045.jpg"
        string_val: "input/training/n3/n3161.jpg"
        string_val: "input/training/n3/n3150.jpg"
        string_val: "input/training/n3/n3164.jpg"
        string_val: "input/training/n3/n3059.jpg"
        string_val: "input/training/n3/n3125.jpg"
        string_val: "input/training/n3/n3020.jpg"
        string_val: "input/training/n3/n3065.jpg"
        string_val: "input/training/n3/n3123.jpg"
        string_val: "input/training/n3/n3047.jpg"
        string_val: "input/training/n3/n3149.jpg"
        string_val: "input/training/n3/n3024.jpg"
        string_val: "input/training/n3/n3029.jpg"
        string_val: "input/training/n3/n3061.jpg"
        string_val: "input/training/n3/n3158.jpg"
        string_val: "input/training/n3/n3067.jpg"
        string_val: "input/training/n3/n3167.jpg"
        string_val: "input/training/n3/n3120.jpg"
        string_val: "input/training/n3/n3129.jpg"
        string_val: "input/training/n3/n3153.jpg"
        string_val: "input/training/n3/n3040.jpg"
        string_val: "input/training/n3/n3115.jpg"
        string_val: "input/training/n3/n3119.jpg"
        string_val: "input/training/n3/n3126.jpg"
        string_val: "input/training/n3/n3148.jpg"
        string_val: "input/training/n3/n3156.jpg"
        string_val: "input/training/n3/n3117.jpg"
        string_val: "input/training/n3/n3157.jpg"
        string_val: "input/training/n3/n3025.jpg"
        string_val: "input/training/n3/n3145.jpg"
        string_val: "input/training/n3/n3072.jpg"
        string_val: "input/training/n3/n3058.jpg"
        string_val: "input/training/n3/n3112.jpg"
        string_val: "input/training/n3/n3033.jpg"
        string_val: "input/training/n3/n3030.jpg"
        string_val: "input/training/n3/n3127.jpg"
        string_val: "input/training/n3/n3143.jpg"
        string_val: "input/training/n3/n3066.jpg"
        string_val: "input/training/n3/n3078.jpg"
        string_val: "input/training/n3/n3073.jpg"
        string_val: "input/training/n3/n3165.jpg"
        string_val: "input/training/n3/n3035.jpg"
        string_val: "input/training/n3/n3027.jpg"
        string_val: "input/training/n3/n3031.jpg"
        string_val: "input/training/n3/n3159.jpg"
        string_val: "input/training/n3/n3056.jpg"
        string_val: "input/training/n3/n3076.jpg"
        string_val: "input/training/n3/n3036.jpg"
        string_val: "input/training/n3/n3134.jpg"
        string_val: "input/training/n3/n3142.jpg"
        string_val: "input/training/n3/n3130.jpg"
        string_val: "input/training/n3/n3060.jpg"
        string_val: "input/training/n3/n3022.jpg"
        string_val: "input/training/n3/n3169.jpg"
        string_val: "input/training/n3/n3131.jpg"
        string_val: "input/training/n3/n3053.jpg"
        string_val: "input/training/n3/n3140.jpg"
        string_val: "input/training/n3/n3052.jpg"
        string_val: "input/training/n3/n3048.jpg"
        string_val: "input/training/n3/n3172.jpg"
        string_val: "input/training/n3/n3152.jpg"
        string_val: "input/training/n3/n3021.jpg"
        string_val: "input/training/n3/n3163.jpg"
        string_val: "input/training/n3/n3046.jpg"
        string_val: "input/training/n3/n3155.jpg"
        string_val: "input/training/n3/n3144.jpg"
        string_val: "input/training/n3/n3026.jpg"
        string_val: "input/training/n3/n3032.jpg"
        string_val: "input/training/n3/n3124.jpg"
        string_val: "input/training/n3/n3069.jpg"
        string_val: "input/training/n3/n3146.jpg"
        string_val: "input/training/n3/n3068.jpg"
        string_val: "input/training/n3/n3074.jpg"
        string_val: "input/training/n3/n3138.jpg"
        string_val: "input/training/n3/n3057.jpg"
        string_val: "input/training/n3/n3139.jpg"
        string_val: "input/training/n3/n3044.jpg"
        string_val: "input/training/n3/n3122.jpg"
        string_val: "input/training/n3/n3147.jpg"
        string_val: "input/training/n3/n3111.jpg"
        string_val: "input/training/n3/n3077.jpg"
        string_val: "input/training/n3/n3118.jpg"
        string_val: "input/training/n3/n3151.jpg"
        string_val: "input/training/n3/n3041.jpg"
        string_val: "input/training/n3/n3114.jpg"
        string_val: "input/training/n3/n3034.jpg"
        string_val: "input/training/n2/n2052.jpg"
        string_val: "input/training/n2/n2060.jpg"
        string_val: "input/training/n2/n2043.jpg"
        string_val: "input/training/n2/n2025.jpg"
        string_val: "input/training/n2/n2037.jpg"
        string_val: "input/training/n2/n2135.jpg"
        string_val: "input/training/n2/n2068.jpg"
        string_val: "input/training/n2/n2057.jpg"
        string_val: "input/training/n2/n2063.jpg"
        string_val: "input/training/n2/n2058.jpg"
        string_val: "input/training/n2/n2039.jpg"
        string_val: "input/training/n2/n2117.jpg"
        string_val: "input/training/n2/n2040.jpg"
        string_val: "input/training/n2/n2110.jpg"
        string_val: "input/training/n2/n2142.jpg"
        string_val: "input/training/n2/n2139.jpg"
        string_val: "input/training/n2/n2141.jpg"
        string_val: "input/training/n2/n2026.jpg"
        string_val: "input/training/n2/n2065.jpg"
        string_val: "input/training/n2/n2166.jpg"
        string_val: "input/training/n2/n2047.jpg"
        string_val: "input/training/n2/n2048.jpg"
        string_val: "input/training/n2/n2165.jpg"
        string_val: "input/training/n2/n2148.jpg"
        string_val: "input/training/n2/n2018.jpg"
        string_val: "input/training/n2/n2130.jpg"
        string_val: "input/training/n2/n2158.jpg"
        string_val: "input/training/n2/n2129.jpg"
        string_val: "input/training/n2/n2111.jpg"
        string_val: "input/training/n2/n2143.jpg"
        string_val: "input/training/n2/n2044.jpg"
        string_val: "input/training/n2/n2123.jpg"
        string_val: "input/training/n2/n2027.jpg"
        string_val: "input/training/n2/n2053.jpg"
        string_val: "input/training/n2/n2134.jpg"
        string_val: "input/training/n2/n2022.jpg"
        string_val: "input/training/n2/n2124.jpg"
        string_val: "input/training/n2/n2149.jpg"
        string_val: "input/training/n2/n2157.jpg"
        string_val: "input/training/n2/n2033.jpg"
        string_val: "input/training/n2/n2162.jpg"
        string_val: "input/training/n2/n2035.jpg"
        string_val: "input/training/n2/n2029.jpg"
        string_val: "input/training/n2/n2067.jpg"
        string_val: "input/training/n2/n2031.jpg"
        string_val: "input/training/n2/n2120.jpg"
        string_val: "input/training/n2/n2156.jpg"
        string_val: "input/training/n2/n2152.jpg"
        string_val: "input/training/n2/n2145.jpg"
        string_val: "input/training/n2/n2132.jpg"
        string_val: "input/training/n2/n2137.jpg"
        string_val: "input/training/n2/n2116.jpg"
        string_val: "input/training/n2/n2155.jpg"
        string_val: "input/training/n2/n2122.jpg"
        string_val: "input/training/n2/n2147.jpg"
        string_val: "input/training/n2/n2131.jpg"
        string_val: "input/training/n2/n2160.jpg"
        string_val: "input/training/n2/n2064.jpg"
        string_val: "input/training/n2/n2125.jpg"
        string_val: "input/training/n2/n2030.jpg"
        string_val: "input/training/n2/n2061.jpg"
        string_val: "input/training/n2/n2114.jpg"
        string_val: "input/training/n2/n2028.jpg"
        string_val: "input/training/n2/n2045.jpg"
        string_val: "input/training/n2/n2066.jpg"
        string_val: "input/training/n2/n2163.jpg"
        string_val: "input/training/n2/n2042.jpg"
        string_val: "input/training/n2/n2127.jpg"
        string_val: "input/training/n2/n2153.jpg"
        string_val: "input/training/n2/n2046.jpg"
        string_val: "input/training/n2/n2136.jpg"
        string_val: "input/training/n2/n2032.jpg"
        string_val: "input/training/n2/n2121.jpg"
        string_val: "input/training/n2/n2069.jpg"
        string_val: "input/training/n2/n2050.jpg"
        string_val: "input/training/n2/n2118.jpg"
        string_val: "input/training/n2/n2140.jpg"
        string_val: "input/training/n2/n2138.jpg"
        string_val: "input/training/n2/n2036.jpg"
        string_val: "input/training/n2/n2038.jpg"
        string_val: "input/training/n2/n2020.jpg"
        string_val: "input/training/n2/n2150.jpg"
        string_val: "input/training/n2/n2019.jpg"
        string_val: "input/training/n2/n2049.jpg"
        string_val: "input/training/n2/n2146.jpg"
        string_val: "input/training/n2/n2112.jpg"
        string_val: "input/training/n2/n2159.jpg"
        string_val: "input/training/n2/n2133.jpg"
        string_val: "input/training/n2/n2051.jpg"
        string_val: "input/training/n2/n2161.jpg"
        string_val: "input/training/n2/n2164.jpg"
        string_val: "input/training/n2/n2115.jpg"
        string_val: "input/training/n2/n2144.jpg"
        string_val: "input/training/n2/n2041.jpg"
        string_val: "input/training/n2/n2017.jpg"
        string_val: "input/training/n2/n2056.jpg"
        string_val: "input/training/n2/n2119.jpg"
        string_val: "input/training/n2/n2021.jpg"
        string_val: "input/training/n2/n2062.jpg"
        string_val: "input/training/n2/n2023.jpg"
        string_val: "input/training/n2/n2024.jpg"
        string_val: "input/training/n2/n2154.jpg"
        string_val: "input/training/n2/n2034.jpg"
        string_val: "input/training/n2/n2128.jpg"
        string_val: "input/training/n2/n2126.jpg"
        string_val: "input/training/n2/n2054.jpg"
        string_val: "input/training/n2/n2151.jpg"
        string_val: "input/training/n2/n2055.jpg"
        string_val: "input/training/n2/n2059.jpg"
        string_val: "input/training/n2/n2113.jpg"
        string_val: "input/training/n6/n6024.jpg"
        string_val: "input/training/n6/n6144.jpg"
        string_val: "input/training/n6/n6057.jpg"
        string_val: "input/training/n6/n6121.jpg"
        string_val: "input/training/n6/n6152.jpg"
        string_val: "input/training/n6/n6125.jpg"
        string_val: "input/training/n6/n6128.jpg"
        string_val: "input/training/n6/n6049.jpg"
        string_val: "input/training/n6/n6046.jpg"
        string_val: "input/training/n6/n6037.jpg"
        string_val: "input/training/n6/n6147.jpg"
        string_val: "input/training/n6/n6031.jpg"
        string_val: "input/training/n6/n6067.jpg"
        string_val: "input/training/n6/n6118.jpg"
        string_val: "input/training/n6/n6055.jpg"
        string_val: "input/training/n6/n6020.jpg"
        string_val: "input/training/n6/n6142.jpg"
        string_val: "input/training/n6/n6032.jpg"
        string_val: "input/training/n6/n6040.jpg"
        string_val: "input/training/n6/n6110.jpg"
        string_val: "input/training/n6/n6132.jpg"
        string_val: "input/training/n6/n6154.jpg"
        string_val: "input/training/n6/n6126.jpg"
        string_val: "input/training/n6/n6045.jpg"
        string_val: "input/training/n6/n6129.jpg"
        string_val: "input/training/n6/n6161.jpg"
        string_val: "input/training/n6/n6058.jpg"
        string_val: "input/training/n6/n6146.jpg"
        string_val: "input/training/n6/n6145.jpg"
        string_val: "input/training/n6/n6056.jpg"
        string_val: "input/training/n6/n6068.jpg"
        string_val: "input/training/n6/n6112.jpg"
        string_val: "input/training/n6/n6016.jpg"
        string_val: "input/training/n6/n6059.jpg"
        string_val: "input/training/n6/n6053.jpg"
        string_val: "input/training/n6/n6029.jpg"
        string_val: "input/training/n6/n6041.jpg"
        string_val: "input/training/n6/n6120.jpg"
        string_val: "input/training/n6/n6026.jpg"
        string_val: "input/training/n6/n6141.jpg"
        string_val: "input/training/n6/n6149.jpg"
        string_val: "input/training/n6/n6116.jpg"
        string_val: "input/training/n6/n6135.jpg"
        string_val: "input/training/n6/n6156.jpg"
        string_val: "input/training/n6/n6131.jpg"
        string_val: "input/training/n6/n6023.jpg"
        string_val: "input/training/n6/n6153.jpg"
        string_val: "input/training/n6/n6050.jpg"
        string_val: "input/training/n6/n6048.jpg"
        string_val: "input/training/n6/n6043.jpg"
        string_val: "input/training/n6/n6122.jpg"
        string_val: "input/training/n6/n6047.jpg"
        string_val: "input/training/n6/n6027.jpg"
        string_val: "input/training/n6/n6042.jpg"
        string_val: "input/training/n6/n6019.jpg"
        string_val: "input/training/n6/n6034.jpg"
        string_val: "input/training/n6/n6030.jpg"
        string_val: "input/training/n6/n6151.jpg"
        string_val: "input/training/n6/n6158.jpg"
        string_val: "input/training/n6/n6022.jpg"
        string_val: "input/training/n6/n6140.jpg"
        string_val: "input/training/n6/n6119.jpg"
        string_val: "input/training/n6/n6052.jpg"
        string_val: "input/training/n6/n6143.jpg"
        string_val: "input/training/n6/n6044.jpg"
        string_val: "input/training/n6/n6065.jpg"
        string_val: "input/training/n6/n6069.jpg"
        string_val: "input/training/n6/n6139.jpg"
        string_val: "input/training/n6/n6062.jpg"
        string_val: "input/training/n6/n6038.jpg"
        string_val: "input/training/n6/n6111.jpg"
        string_val: "input/training/n6/n6130.jpg"
        string_val: "input/training/n6/n6114.jpg"
        string_val: "input/training/n6/n6054.jpg"
        string_val: "input/training/n6/n6150.jpg"
        string_val: "input/training/n6/n6124.jpg"
        string_val: "input/training/n6/n6148.jpg"
        string_val: "input/training/n6/n6051.jpg"
        string_val: "input/training/n6/n6066.jpg"
        string_val: "input/training/n6/n6157.jpg"
        string_val: "input/training/n6/n6115.jpg"
        string_val: "input/training/n6/n6017.jpg"
        string_val: "input/training/n6/n6035.jpg"
        string_val: "input/training/n6/n6064.jpg"
        string_val: "input/training/n6/n6036.jpg"
        string_val: "input/training/n6/n6134.jpg"
        string_val: "input/training/n6/n6113.jpg"
        string_val: "input/training/n6/n6018.jpg"
        string_val: "input/training/n6/n6160.jpg"
        string_val: "input/training/n6/n6063.jpg"
        string_val: "input/training/n6/n6028.jpg"
        string_val: "input/training/n6/n6123.jpg"
        string_val: "input/training/n6/n6025.jpg"
        string_val: "input/training/n6/n6155.jpg"
        string_val: "input/training/n6/n6137.jpg"
        string_val: "input/training/n6/n6033.jpg"
        string_val: "input/training/n6/n6039.jpg"
        string_val: "input/training/n6/n6133.jpg"
        string_val: "input/training/n6/n6060.jpg"
        string_val: "input/training/n6/n6117.jpg"
        string_val: "input/training/n6/n6021.jpg"
        string_val: "input/training/n6/n6138.jpg"
        string_val: "input/training/n6/n6061.jpg"
        string_val: "input/training/n6/n6136.jpg"
        string_val: "input/training/n6/n6127.jpg"
        string_val: "input/training/n6/n6159.jpg"
        string_val: "input/training/n8/n8069.jpg"
        string_val: "input/training/n8/n8057.jpg"
        string_val: "input/training/n8/n8132.jpg"
        string_val: "input/training/n8/n8047.jpg"
        string_val: "input/training/n8/n8133.jpg"
        string_val: "input/training/n8/n8130.jpg"
        string_val: "input/training/n8/n8141.jpg"
        string_val: "input/training/n8/n8062.jpg"
        string_val: "input/training/n8/n8139.jpg"
        string_val: "input/training/n8/n8128.jpg"
        string_val: "input/training/n8/n8148.jpg"
        string_val: "input/training/n8/n8075.jpg"
        string_val: "input/training/n8/n8113.jpg"
        string_val: "input/training/n8/n8034.jpg"
        string_val: "input/training/n8/n8123.jpg"
        string_val: "input/training/n8/n8032.jpg"
        string_val: "input/training/n8/n8140.jpg"
        string_val: "input/training/n8/n8150.jpg"
        string_val: "input/training/n8/n8043.jpg"
        string_val: "input/training/n8/n8022.jpg"
        string_val: "input/training/n8/n8111.jpg"
        string_val: "input/training/n8/n8151.jpg"
        string_val: "input/training/n8/n8053.jpg"
        string_val: "input/training/n8/n8116.jpg"
        string_val: "input/training/n8/n8134.jpg"
        string_val: "input/training/n8/n8117.jpg"
        string_val: "input/training/n8/n8146.jpg"
        string_val: "input/training/n8/n8145.jpg"
        string_val: "input/training/n8/n8147.jpg"
        string_val: "input/training/n8/n8041.jpg"
        string_val: "input/training/n8/n8029.jpg"
        string_val: "input/training/n8/n8044.jpg"
        string_val: "input/training/n8/n8142.jpg"
        string_val: "input/training/n8/n8077.jpg"
        string_val: "input/training/n8/n8050.jpg"
        string_val: "input/training/n8/n8129.jpg"
        string_val: "input/training/n8/n8125.jpg"
        string_val: "input/training/n8/n8110.jpg"
        string_val: "input/training/n8/n8136.jpg"
        string_val: "input/training/n8/n8135.jpg"
        string_val: "input/training/n8/n8058.jpg"
        string_val: "input/training/n8/n8076.jpg"
        string_val: "input/training/n8/n8054.jpg"
        string_val: "input/training/n8/n8144.jpg"
        string_val: "input/training/n8/n8019.jpg"
        string_val: "input/training/n8/n8079.jpg"
        string_val: "input/training/n8/n8127.jpg"
        string_val: "input/training/n8/n8131.jpg"
        string_val: "input/training/n8/n8056.jpg"
        string_val: "input/training/n8/n8033.jpg"
        string_val: "input/training/n8/n8046.jpg"
        string_val: "input/training/n8/n8038.jpg"
        string_val: "input/training/n8/n8045.jpg"
        string_val: "input/training/n8/n8055.jpg"
        string_val: "input/training/n8/n8051.jpg"
        string_val: "input/training/n8/n8066.jpg"
        string_val: "input/training/n8/n8042.jpg"
        string_val: "input/training/n8/n8114.jpg"
        string_val: "input/training/n8/n8025.jpg"
        string_val: "input/training/n8/n8030.jpg"
        string_val: "input/training/n8/n8118.jpg"
        string_val: "input/training/n8/n8049.jpg"
        string_val: "input/training/n8/n8122.jpg"
        string_val: "input/training/n8/n8064.jpg"
        string_val: "input/training/n8/n8112.jpg"
        string_val: "input/training/n8/n8039.jpg"
        string_val: "input/training/n8/n8035.jpg"
        string_val: "input/training/n8/n8074.jpg"
        string_val: "input/training/n8/n8028.jpg"
        string_val: "input/training/n8/n8059.jpg"
        string_val: "input/training/n8/n8121.jpg"
        string_val: "input/training/n8/n8063.jpg"
        string_val: "input/training/n8/n8052.jpg"
        string_val: "input/training/n8/n8060.jpg"
        string_val: "input/training/n8/n8027.jpg"
        string_val: "input/training/n8/n818.jpg"
        string_val: "input/training/n8/n8143.jpg"
        string_val: "input/training/n8/n8067.jpg"
        string_val: "input/training/n8/n8126.jpg"
        string_val: "input/training/n8/n8068.jpg"
        string_val: "input/training/n8/n8120.jpg"
        string_val: "input/training/n8/n8018.jpg"
        string_val: "input/training/n8/n8137.jpg"
        string_val: "input/training/n8/n8065.jpg"
        string_val: "input/training/n8/n8080.jpg"
        string_val: "input/training/n8/n8040.jpg"
        string_val: "input/training/n8/n8149.jpg"
        string_val: "input/training/n8/n8073.jpg"
        string_val: "input/training/n8/n8061.jpg"
        string_val: "input/training/n8/n8036.jpg"
        string_val: "input/training/n8/n808.jpg"
        string_val: "input/training/n8/n8115.jpg"
        string_val: "input/training/n8/n8071.jpg"
        string_val: "input/training/n8/n8072.jpg"
        string_val: "input/training/n8/n8024.jpg"
        string_val: "input/training/n8/n8078.jpg"
        string_val: "input/training/n8/n817.jpg"
        string_val: "input/training/n8/n8023.jpg"
        string_val: "input/training/n8/n8037.jpg"
        string_val: "input/training/n8/n8124.jpg"
        string_val: "input/training/n8/n8070.jpg"
        string_val: "input/training/n8/n8138.jpg"
        string_val: "input/training/n8/n8048.jpg"
        string_val: "input/training/n8/n8026.jpg"
        string_val: "input/training/n8/n8020.jpg"
        string_val: "input/training/n8/n8119.jpg"
        string_val: "input/training/n4/n4025.jpg"
        string_val: "input/training/n4/n4051.jpg"
        string_val: "input/training/n4/n4027.jpg"
        string_val: "input/training/n4/n4034.jpg"
        string_val: "input/training/n4/n4149.jpg"
        string_val: "input/training/n4/n4139.jpg"
        string_val: "input/training/n4/n4061.jpg"
        string_val: "input/training/n4/n4147.jpg"
        string_val: "input/training/n4/n4151.jpg"
        string_val: "input/training/n4/n4131.jpg"
        string_val: "input/training/n4/n4058.jpg"
        string_val: "input/training/n4/n4043.jpg"
        string_val: "input/training/n4/n4120.jpg"
        string_val: "input/training/n4/n41556.jpg"
        string_val: "input/training/n4/n4126.jpg"
        string_val: "input/training/n4/n4045.jpg"
        string_val: "input/training/n4/n41562.jpg"
        string_val: "input/training/n4/n4122.jpg"
        string_val: "input/training/n4/n4030.jpg"
        string_val: "input/training/n4/n4017.jpg"
        string_val: "input/training/n4/n4062.jpg"
        string_val: "input/training/n4/n4138.jpg"
        string_val: "input/training/n4/n4064.jpg"
        string_val: "input/training/n4/n4116.jpg"
        string_val: "input/training/n4/n4153.jpg"
        string_val: "input/training/n4/n41557.jpg"
        string_val: "input/training/n4/n4144.jpg"
        string_val: "input/training/n4/n4038.jpg"
        string_val: "input/training/n4/n4019.jpg"
        string_val: "input/training/n4/n4127.jpg"
        string_val: "input/training/n4/n41563.jpg"
        string_val: "input/training/n4/n4150.jpg"
        string_val: "input/training/n4/n41561.jpg"
        string_val: "input/training/n4/n4115.jpg"
        string_val: "input/training/n4/n4128.jpg"
        string_val: "input/training/n4/n4154.jpg"
        string_val: "input/training/n4/n4141.jpg"
        string_val: "input/training/n4/n4111.jpg"
        string_val: "input/training/n4/n4121.jpg"
        string_val: "input/training/n4/n4129.jpg"
        string_val: "input/training/n4/n4022.jpg"
        string_val: "input/training/n4/n4031.jpg"
        string_val: "input/training/n4/n4048.jpg"
        string_val: "input/training/n4/n4033.jpg"
        string_val: "input/training/n4/n4018.jpg"
        string_val: "input/training/n4/n4142.jpg"
        string_val: "input/training/n4/n4135.jpg"
        string_val: "input/training/n4/n4028.jpg"
        string_val: "input/training/n4/n4052.jpg"
        string_val: "input/training/n4/n4049.jpg"
        string_val: "input/training/n4/n4130.jpg"
        string_val: "input/training/n4/n4155.jpg"
        string_val: "input/training/n4/n4114.jpg"
        string_val: "input/training/n4/n4056.jpg"
        string_val: "input/training/n4/n4146.jpg"
        string_val: "input/training/n4/n4125.jpg"
        string_val: "input/training/n4/n4016.jpg"
        string_val: "input/training/n4/n4060.jpg"
        string_val: "input/training/n4/n4050.jpg"
        string_val: "input/training/n4/n4137.jpg"
        string_val: "input/training/n4/n4042.jpg"
        string_val: "input/training/n4/n4037.jpg"
        string_val: "input/training/n4/n4117.jpg"
        string_val: "input/training/n4/n41564.jpg"
        string_val: "input/training/n4/n4132.jpg"
        string_val: "input/training/n4/n4133.jpg"
        string_val: "input/training/n4/n4054.jpg"
        string_val: "input/training/n4/n4118.jpg"
        string_val: "input/training/n4/n4119.jpg"
        string_val: "input/training/n4/n4110.jpg"
        string_val: "input/training/n4/n4035.jpg"
        string_val: "input/training/n4/n4039.jpg"
        string_val: "input/training/n4/n4136.jpg"
        string_val: "input/training/n4/n4124.jpg"
        string_val: "input/training/n4/n4123.jpg"
        string_val: "input/training/n4/n4029.jpg"
        string_val: "input/training/n4/n4055.jpg"
        string_val: "input/training/n4/n4059.jpg"
        string_val: "input/training/n4/n4036.jpg"
        string_val: "input/training/n4/n4152.jpg"
        string_val: "input/training/n4/n4057.jpg"
        string_val: "input/training/n4/n4143.jpg"
        string_val: "input/training/n4/n4041.jpg"
        string_val: "input/training/n4/n4040.jpg"
        string_val: "input/training/n4/n41559.jpg"
        string_val: "input/training/n4/n4148.jpg"
        string_val: "input/training/n4/n4026.jpg"
        string_val: "input/training/n4/n4023.jpg"
        string_val: "input/training/n4/n4032.jpg"
        string_val: "input/training/n4/n4063.jpg"
        string_val: "input/training/n4/n4140.jpg"
        string_val: "input/training/n4/n4047.jpg"
        string_val: "input/training/n4/n4024.jpg"
        string_val: "input/training/n4/n4044.jpg"
        string_val: "input/training/n4/n4046.jpg"
        string_val: "input/training/n4/n4134.jpg"
        string_val: "input/training/n4/n4053.jpg"
        string_val: "input/training/n4/n4021.jpg"
        string_val: "input/training/n4/n4112.jpg"
        string_val: "input/training/n4/n4113.jpg"
        string_val: "input/training/n4/n4145.jpg"
        string_val: "input/training/n4/n41560.jpg"
        string_val: "input/training/n4/n41558.jpg"
        string_val: "input/training/n4/n4020.jpg"
        string_val: "input/training/n4/n41565.jpg"
        string_val: "input/training/n1/n1153.jpg"
        string_val: "input/training/n1/n1152.jpg"
        string_val: "input/training/n1/n1063.jpg"
        string_val: "input/training/n1/n1049.jpg"
        string_val: "input/training/n1/n1138.jpg"
        string_val: "input/training/n1/n1034.jpg"
        string_val: "input/training/n1/n1043.jpg"
        string_val: "input/training/n1/n1021.jpg"
        string_val: "input/training/n1/n1059.jpg"
        string_val: "input/training/n1/n1070.jpg"
        string_val: "input/training/n1/n1124.jpg"
        string_val: "input/training/n1/n1157.jpg"
        string_val: "input/training/n1/n1147.jpg"
        string_val: "input/training/n1/n1035.jpg"
        string_val: "input/training/n1/n1045.jpg"
        string_val: "input/training/n1/n1115.jpg"
        string_val: "input/training/n1/n1111.jpg"
        string_val: "input/training/n1/n1130.jpg"
        string_val: "input/training/n1/n1141.jpg"
        string_val: "input/training/n1/n1048.jpg"
        string_val: "input/training/n1/n1037.jpg"
        string_val: "input/training/n1/n1072.jpg"
        string_val: "input/training/n1/n1136.jpg"
        string_val: "input/training/n1/n1041.jpg"
        string_val: "input/training/n1/n1110.jpg"
        string_val: "input/training/n1/n1030.jpg"
        string_val: "input/training/n1/n1143.jpg"
        string_val: "input/training/n1/n1050.jpg"
        string_val: "input/training/n1/n1142.jpg"
        string_val: "input/training/n1/n1054.jpg"
        string_val: "input/training/n1/n1019.jpg"
        string_val: "input/training/n1/n1062.jpg"
        string_val: "input/training/n1/n1164.jpg"
        string_val: "input/training/n1/n1133.jpg"
        string_val: "input/training/n1/n1165.jpg"
        string_val: "input/training/n1/n1023.jpg"
        string_val: "input/training/n1/n1118.jpg"
        string_val: "input/training/n1/n1038.jpg"
        string_val: "input/training/n1/n1025.jpg"
        string_val: "input/training/n1/n1071.jpg"
        string_val: "input/training/n1/n1022.jpg"
        string_val: "input/training/n1/n1061.jpg"
        string_val: "input/training/n1/n1044.jpg"
        string_val: "input/training/n1/n1060.jpg"
        string_val: "input/training/n1/n1162.jpg"
        string_val: "input/training/n1/n1114.jpg"
        string_val: "input/training/n1/n1127.jpg"
        string_val: "input/training/n1/n1024.jpg"
        string_val: "input/training/n1/n1125.jpg"
        string_val: "input/training/n1/n1113.jpg"
        string_val: "input/training/n1/n1067.jpg"
        string_val: "input/training/n1/n1161.jpg"
        string_val: "input/training/n1/n1131.jpg"
        string_val: "input/training/n1/n1066.jpg"
        string_val: "input/training/n1/n1051.jpg"
        string_val: "input/training/n1/n1028.jpg"
        string_val: "input/training/n1/n1047.jpg"
        string_val: "input/training/n1/n1154.jpg"
        string_val: "input/training/n1/n1058.jpg"
        string_val: "input/training/n1/n1148.jpg"
        string_val: "input/training/n1/n1129.jpg"
        string_val: "input/training/n1/n1064.jpg"
        string_val: "input/training/n1/n1119.jpg"
        string_val: "input/training/n1/n1052.jpg"
        string_val: "input/training/n1/n1042.jpg"
        string_val: "input/training/n1/n1069.jpg"
        string_val: "input/training/n1/n1026.jpg"
        string_val: "input/training/n1/n1155.jpg"
        string_val: "input/training/n1/n1120.jpg"
        string_val: "input/training/n1/n1116.jpg"
        string_val: "input/training/n1/n1126.jpg"
        string_val: "input/training/n1/n1121.jpg"
        string_val: "input/training/n1/n1036.jpg"
        string_val: "input/training/n1/n1039.jpg"
        string_val: "input/training/n1/n1134.jpg"
        string_val: "input/training/n1/n1046.jpg"
        string_val: "input/training/n1/n1122.jpg"
        string_val: "input/training/n1/n1158.jpg"
        string_val: "input/training/n1/n1139.jpg"
        string_val: "input/training/n1/n1146.jpg"
        string_val: "input/training/n1/n1065.jpg"
        string_val: "input/training/n1/n1159.jpg"
        string_val: "input/training/n1/n1160.jpg"
        string_val: "input/training/n1/n1027.jpg"
        string_val: "input/training/n1/n1033.jpg"
        string_val: "input/training/n1/n1032.jpg"
        string_val: "input/training/n1/n1017.jpg"
        string_val: "input/training/n1/n1117.jpg"
        string_val: "input/training/n1/n1144.jpg"
        string_val: "input/training/n1/n1018.jpg"
        string_val: "input/training/n1/n1068.jpg"
        string_val: "input/training/n1/n1132.jpg"
        string_val: "input/training/n1/n1055.jpg"
        string_val: "input/training/n1/n1029.jpg"
        string_val: "input/training/n1/n1140.jpg"
        string_val: "input/training/n1/n1053.jpg"
        string_val: "input/training/n1/n1112.jpg"
        string_val: "input/training/n1/n1056.jpg"
        string_val: "input/training/n1/n1150.jpg"
        string_val: "input/training/n1/n1145.jpg"
        string_val: "input/training/n1/n1135.jpg"
        string_val: "input/training/n1/n1137.jpg"
        string_val: "input/training/n1/n1123.jpg"
        string_val: "input/training/n1/n1040.jpg"
        string_val: "input/training/n1/n1057.jpg"
        string_val: "input/training/n1/n1156.jpg"
        string_val: "input/training/n1/n1149.jpg"
        string_val: "input/training/n1/n1163.jpg"
        string_val: "input/training/n1/n1031.jpg"
        string_val: "input/training/n1/n1128.jpg"
        string_val: "input/training/n1/n1151.jpg"
        string_val: "input/training/n5/n5143.jpg"
        string_val: "input/training/n5/n5114.jpg"
        string_val: "input/training/n5/n5122.jpg"
        string_val: "input/training/n5/n5149.jpg"
        string_val: "input/training/n5/n5037.jpg"
        string_val: "input/training/n5/n5071.jpg"
        string_val: "input/training/n5/n5045.jpg"
        string_val: "input/training/n5/n5023.jpg"
        string_val: "input/training/n5/n5059.jpg"
        string_val: "input/training/n5/n5052.jpg"
        string_val: "input/training/n5/n5145.jpg"
        string_val: "input/training/n5/n5061.jpg"
        string_val: "input/training/n5/n5068.jpg"
        string_val: "input/training/n5/n5139.jpg"
        string_val: "input/training/n5/n5128.jpg"
        string_val: "input/training/n5/n5055.jpg"
        string_val: "input/training/n5/n5130.jpg"
        string_val: "input/training/n5/n5064.jpg"
        string_val: "input/training/n5/n5131.jpg"
        string_val: "input/training/n5/n5031.jpg"
        string_val: "input/training/n5/n5033.jpg"
        string_val: "input/training/n5/n5165.jpg"
        string_val: "input/training/n5/n5157.jpg"
        string_val: "input/training/n5/n5026.jpg"
        string_val: "input/training/n5/n5034.jpg"
        string_val: "input/training/n5/n5121.jpg"
        string_val: "input/training/n5/n5133.jpg"
        string_val: "input/training/n5/n5118.jpg"
        string_val: "input/training/n5/n5058.jpg"
        string_val: "input/training/n5/n5158.jpg"
        string_val: "input/training/n5/n5054.jpg"
        string_val: "input/training/n5/n5117.jpg"
        string_val: "input/training/n5/n5162.jpg"
        string_val: "input/training/n5/n5038.jpg"
        string_val: "input/training/n5/n5112.jpg"
        string_val: "input/training/n5/n5125.jpg"
        string_val: "input/training/n5/n5156.jpg"
        string_val: "input/training/n5/n5126.jpg"
        string_val: "input/training/n5/n5141.jpg"
        string_val: "input/training/n5/n5060.jpg"
        string_val: "input/training/n5/n5028.jpg"
        string_val: "input/training/n5/n5135.jpg"
        string_val: "input/training/n5/n5154.jpg"
        string_val: "input/training/n5/n5043.jpg"
        string_val: "input/training/n5/n5163.jpg"
        string_val: "input/training/n5/n5160.jpg"
        string_val: "input/training/n5/n5116.jpg"
        string_val: "input/training/n5/n5032.jpg"
        string_val: "input/training/n5/n5161.jpg"
        string_val: "input/training/n5/n5115.jpg"
        string_val: "input/training/n5/n5020.jpg"
        string_val: "input/training/n5/n5140.jpg"
        string_val: "input/training/n5/n5144.jpg"
        string_val: "input/training/n5/n5019.jpg"
        string_val: "input/training/n5/n5022.jpg"
        string_val: "input/training/n5/n5111.jpg"
        string_val: "input/training/n5/n5069.jpg"
        string_val: "input/training/n5/n5036.jpg"
        string_val: "input/training/n5/n5066.jpg"
        string_val: "input/training/n5/n5138.jpg"
        string_val: "input/training/n5/n5062.jpg"
        string_val: "input/training/n5/n5113.jpg"
        string_val: "input/training/n5/n5067.jpg"
        string_val: "input/training/n5/n5152.jpg"
        string_val: "input/training/n5/n5030.jpg"
        string_val: "input/training/n5/n5127.jpg"
        string_val: "input/training/n5/n5159.jpg"
        string_val: "input/training/n5/n5070.jpg"
        string_val: "input/training/n5/n5057.jpg"
        string_val: "input/training/n5/n5110.jpg"
        string_val: "input/training/n5/n5146.jpg"
        string_val: "input/training/n5/n5047.jpg"
        string_val: "input/training/n5/n5048.jpg"
        string_val: "input/training/n5/n5136.jpg"
        string_val: "input/training/n5/n5063.jpg"
        string_val: "input/training/n5/n5134.jpg"
        string_val: "input/training/n5/n5151.jpg"
        string_val: "input/training/n5/n5056.jpg"
        string_val: "input/training/n5/n5072.jpg"
        string_val: "input/training/n5/n5053.jpg"
        string_val: "input/training/n5/n5042.jpg"
        string_val: "input/training/n5/n5142.jpg"
        string_val: "input/training/n5/n5044.jpg"
        string_val: "input/training/n5/n5123.jpg"
        string_val: "input/training/n5/n5155.jpg"
        string_val: "input/training/n5/n5147.jpg"
        string_val: "input/training/n5/n5035.jpg"
        string_val: "input/training/n5/n5120.jpg"
        string_val: "input/training/n5/n5039.jpg"
        string_val: "input/training/n5/n5024.jpg"
        string_val: "input/training/n5/n5027.jpg"
        string_val: "input/training/n5/n5153.jpg"
        string_val: "input/training/n5/n5029.jpg"
        string_val: "input/training/n5/n5018.jpg"
        string_val: "input/training/n5/n5051.jpg"
        string_val: "input/training/n5/n5065.jpg"
        string_val: "input/training/n5/n5021.jpg"
        string_val: "input/training/n5/n5137.jpg"
        string_val: "input/training/n5/n5050.jpg"
        string_val: "input/training/n5/n5166.jpg"
        string_val: "input/training/n5/n5073.jpg"
        string_val: "input/training/n5/n5148.jpg"
        string_val: "input/training/n5/n5025.jpg"
        string_val: "input/training/n5/n5119.jpg"
        string_val: "input/training/n5/n5164.jpg"
        string_val: "input/training/n5/n5040.jpg"
        string_val: "input/training/n5/n5129.jpg"
        string_val: "input/training/n5/n5046.jpg"
        string_val: "input/training/n5/n5132.jpg"
        string_val: "input/training/n5/n5124.jpg"
        string_val: "input/training/n5/n5041.jpg"
        string_val: "input/training/n5/n5150.jpg"
        string_val: "input/training/n5/n5049.jpg"
        string_val: "input/training/n7/n7156.jpg"
        string_val: "input/training/n7/n7026.jpg"
        string_val: "input/training/n7/n7142.jpg"
        string_val: "input/training/n7/n7022.jpg"
        string_val: "input/training/n7/n7140.jpg"
        string_val: "input/training/n7/n7030.jpg"
        string_val: "input/training/n7/n7045.jpg"
        string_val: "input/training/n7/n7065.jpg"
        string_val: "input/training/n7/n7123.jpg"
        string_val: "input/training/n7/n7036.jpg"
        string_val: "input/training/n7/n7144.jpg"
        string_val: "input/training/n7/n7117.jpg"
        string_val: "input/training/n7/n7039.jpg"
        string_val: "input/training/n7/n7029.jpg"
        string_val: "input/training/n7/n7152.jpg"
        string_val: "input/training/n7/n7157.jpg"
        string_val: "input/training/n7/n7134.jpg"
        string_val: "input/training/n7/n7164.jpg"
        string_val: "input/training/n7/n7041.jpg"
        string_val: "input/training/n7/n7116.jpg"
        string_val: "input/training/n7/n7027.jpg"
        string_val: "input/training/n7/n7147.jpg"
        string_val: "input/training/n7/n7115.jpg"
        string_val: "input/training/n7/n7067.jpg"
        string_val: "input/training/n7/n7025.jpg"
        string_val: "input/training/n7/n7126.jpg"
        string_val: "input/training/n7/n7118.jpg"
        string_val: "input/training/n7/n7040.jpg"
        string_val: "input/training/n7/n7071.jpg"
        string_val: "input/training/n7/n7135.jpg"
        string_val: "input/training/n7/n7063.jpg"
        string_val: "input/training/n7/n7058.jpg"
        string_val: "input/training/n7/n7021.jpg"
        string_val: "input/training/n7/n7054.jpg"
        string_val: "input/training/n7/n7168.jpg"
        string_val: "input/training/n7/n7119.jpg"
        string_val: "input/training/n7/n7052.jpg"
        string_val: "input/training/n7/n7130.jpg"
        string_val: "input/training/n7/n7136.jpg"
        string_val: "input/training/n7/n7120.jpg"
        string_val: "input/training/n7/n7128.jpg"
        string_val: "input/training/n7/n7113.jpg"
        string_val: "input/training/n7/n7038.jpg"
        string_val: "input/training/n7/n7048.jpg"
        string_val: "input/training/n7/n7148.jpg"
        string_val: "input/training/n7/n7127.jpg"
        string_val: "input/training/n7/n7042.jpg"
        string_val: "input/training/n7/n7055.jpg"
        string_val: "input/training/n7/n7047.jpg"
        string_val: "input/training/n7/n7121.jpg"
        string_val: "input/training/n7/n7166.jpg"
        string_val: "input/training/n7/n7111.jpg"
        string_val: "input/training/n7/n7053.jpg"
        string_val: "input/training/n7/n7137.jpg"
        string_val: "input/training/n7/n7138.jpg"
        string_val: "input/training/n7/n7114.jpg"
        string_val: "input/training/n7/n7132.jpg"
        string_val: "input/training/n7/n7167.jpg"
        string_val: "input/training/n7/n7165.jpg"
        string_val: "input/training/n7/n7154.jpg"
        string_val: "input/training/n7/n7133.jpg"
        string_val: "input/training/n7/n7069.jpg"
        string_val: "input/training/n7/n7051.jpg"
        string_val: "input/training/n7/n7162.jpg"
        string_val: "input/training/n7/n7131.jpg"
        string_val: "input/training/n7/n7019.jpg"
        string_val: "input/training/n7/n7141.jpg"
        string_val: "input/training/n7/n7056.jpg"
        string_val: "input/training/n7/n7062.jpg"
        string_val: "input/training/n7/n7035.jpg"
        string_val: "input/training/n7/n7159.jpg"
        string_val: "input/training/n7/n7151.jpg"
        string_val: "input/training/n7/n702.jpg"
        string_val: "input/training/n7/n7064.jpg"
        string_val: "input/training/n7/n7169.jpg"
        string_val: "input/training/n7/n7020.jpg"
        string_val: "input/training/n7/n7160.jpg"
        string_val: "input/training/n7/n7145.jpg"
        string_val: "input/training/n7/n7023.jpg"
        string_val: "input/training/n7/n7034.jpg"
        string_val: "input/training/n7/n7124.jpg"
        string_val: "input/training/n7/n7155.jpg"
        string_val: "input/training/n7/n7153.jpg"
        string_val: "input/training/n7/n7146.jpg"
        string_val: "input/training/n7/n7068.jpg"
        string_val: "input/training/n7/n7043.jpg"
        string_val: "input/training/n7/n7129.jpg"
        string_val: "input/training/n7/n7059.jpg"
        string_val: "input/training/n7/n7158.jpg"
        string_val: "input/training/n7/n7070.jpg"
        string_val: "input/training/n7/n7057.jpg"
        string_val: "input/training/n7/n7139.jpg"
        string_val: "input/training/n7/n7046.jpg"
        string_val: "input/training/n7/n7143.jpg"
        string_val: "input/training/n7/n7032.jpg"
        string_val: "input/training/n7/n7033.jpg"
        string_val: "input/training/n7/n7049.jpg"
        string_val: "input/training/n7/n7061.jpg"
        string_val: "input/training/n7/n7149.jpg"
        string_val: "input/training/n7/n7161.jpg"
        string_val: "input/training/n7/n7125.jpg"
        string_val: "input/training/n7/n7163.jpg"
        string_val: "input/training/n7/n7112.jpg"
        string_val: "input/training/n7/n7060.jpg"
        string_val: "input/training/n7/n7050.jpg"
        string_val: "input/training/n7/n7044.jpg"
        string_val: "input/training/n7/n7031.jpg"
        string_val: "input/training/n7/n7037.jpg"
        string_val: "input/training/n7/n7150.jpg"
        string_val: "input/training/n7/n7024.jpg"
        string_val: "input/training/n7/n7066.jpg"
        string_val: "input/training/n7/n7122.jpg"
        string_val: "input/training/n7/n7028.jpg"
        string_val: "input/training/n7/n7110.jpg"
        string_val: "input/training/n0/n0131.jpg"
        string_val: "input/training/n0/n0173.jpg"
        string_val: "input/training/n0/n0039.jpg"
        string_val: "input/training/n0/n0112.jpg"
        string_val: "input/training/n0/n0127.jpg"
        string_val: "input/training/n0/n0167.jpg"
        string_val: "input/training/n0/n0154.jpg"
        string_val: "input/training/n0/n0165.jpg"
        string_val: "input/training/n0/n0158.jpg"
        string_val: "input/training/n0/n0049.jpg"
        string_val: "input/training/n0/n0020.jpg"
        string_val: "input/training/n0/n0168.jpg"
        string_val: "input/training/n0/n0146.jpg"
        string_val: "input/training/n0/n0141.jpg"
        string_val: "input/training/n0/n0031.jpg"
        string_val: "input/training/n0/n0037.jpg"
        string_val: "input/training/n0/n0155.jpg"
        string_val: "input/training/n0/n0024.jpg"
        string_val: "input/training/n0/n0136.jpg"
        string_val: "input/training/n0/n0038.jpg"
        string_val: "input/training/n0/n0160.jpg"
        string_val: "input/training/n0/n0175.jpg"
        string_val: "input/training/n0/n0143.jpg"
        string_val: "input/training/n0/n0125.jpg"
        string_val: "input/training/n0/n0019.jpg"
        string_val: "input/training/n0/n0116.jpg"
        string_val: "input/training/n0/n0133.jpg"
        string_val: "input/training/n0/n0130.jpg"
        string_val: "input/training/n0/n0176.jpg"
        string_val: "input/training/n0/n0128.jpg"
        string_val: "input/training/n0/n0114.jpg"
        string_val: "input/training/n0/n0027.jpg"
        string_val: "input/training/n0/n0118.jpg"
        string_val: "input/training/n0/n0139.jpg"
        string_val: "input/training/n0/n0169.jpg"
        string_val: "input/training/n0/n0122.jpg"
        string_val: "input/training/n0/n0153.jpg"
        string_val: "input/training/n0/n0134.jpg"
        string_val: "input/training/n0/n0045.jpg"
        string_val: "input/training/n0/n0028.jpg"
        string_val: "input/training/n0/n0026.jpg"
        string_val: "input/training/n0/n0156.jpg"
        string_val: "input/training/n0/n0123.jpg"
        string_val: "input/training/n0/n0025.jpg"
        string_val: "input/training/n0/n0152.jpg"
        string_val: "input/training/n0/n018.jpg"
        string_val: "input/training/n0/n0021.jpg"
        string_val: "input/training/n0/n0149.jpg"
        string_val: "input/training/n0/n0166.jpg"
        string_val: "input/training/n0/n0144.jpg"
        string_val: "input/training/n0/n0159.jpg"
        string_val: "input/training/n0/n0041.jpg"
        string_val: "input/training/n0/n0174.jpg"
        string_val: "input/training/n0/n019.jpg"
        string_val: "input/training/n0/n0147.jpg"
        string_val: "input/training/n0/n0051.jpg"
        string_val: "input/training/n0/n0111.jpg"
        string_val: "input/training/n0/n0124.jpg"
        string_val: "input/training/n0/n0171.jpg"
        string_val: "input/training/n0/n0172.jpg"
        string_val: "input/training/n0/n0113.jpg"
        string_val: "input/training/n0/n0121.jpg"
        string_val: "input/training/n0/n0145.jpg"
        string_val: "input/training/n0/n0043.jpg"
        string_val: "input/training/n0/n0138.jpg"
        string_val: "input/training/n0/n0048.jpg"
        string_val: "input/training/n0/n0140.jpg"
        string_val: "input/training/n0/n0110.jpg"
        string_val: "input/training/n0/n0029.jpg"
        string_val: "input/training/n0/n0030.jpg"
        string_val: "input/training/n0/n0035.jpg"
        string_val: "input/training/n0/n0161.jpg"
        string_val: "input/training/n0/n0040.jpg"
        string_val: "input/training/n0/n0046.jpg"
        string_val: "input/training/n0/n0034.jpg"
        string_val: "input/training/n0/n0018.jpg"
        string_val: "input/training/n0/n0137.jpg"
        string_val: "input/training/n0/n0148.jpg"
        string_val: "input/training/n0/n0022.jpg"
        string_val: "input/training/n0/n0047.jpg"
        string_val: "input/training/n0/n0120.jpg"
        string_val: "input/training/n0/n0053.jpg"
        string_val: "input/training/n0/n0163.jpg"
        string_val: "input/training/n0/n0052.jpg"
        string_val: "input/training/n0/n0117.jpg"
        string_val: "input/training/n0/n0036.jpg"
        string_val: "input/training/n0/n0151.jpg"
        string_val: "input/training/n0/n0115.jpg"
        string_val: "input/training/n0/n0135.jpg"
        string_val: "input/training/n0/n0042.jpg"
        string_val: "input/training/n0/n0023.jpg"
        string_val: "input/training/n0/n0050.jpg"
        string_val: "input/training/n0/n0142.jpg"
        string_val: "input/training/n0/n0170.jpg"
        string_val: "input/training/n0/n0157.jpg"
        string_val: "input/training/n0/n0132.jpg"
        string_val: "input/training/n0/n0162.jpg"
        string_val: "input/training/n0/n0150.jpg"
        string_val: "input/training/n0/n0119.jpg"
        string_val: "input/training/n0/n0032.jpg"
        string_val: "input/training/n0/n0129.jpg"
        string_val: "input/training/n0/n0033.jpg"
        string_val: "input/training/n0/n0044.jpg"
        string_val: "input/training/n0/n0164.jpg"
        string_val: "input/training/n0/n0126.jpg"
        string_val: "input/training/n9/n9042.jpg"
        string_val: "input/training/n9/n9016.jpg"
        string_val: "input/training/n9/n9028.jpg"
        string_val: "input/training/n9/n9162.jpg"
        string_val: "input/training/n9/n9039.jpg"
        string_val: "input/training/n9/n9056.jpg"
        string_val: "input/training/n9/n9034.jpg"
        string_val: "input/training/n9/n9121.jpg"
        string_val: "input/training/n9/n9119.jpg"
        string_val: "input/training/n9/n9155.jpg"
        string_val: "input/training/n9/n9133.jpg"
        string_val: "input/training/n9/n9123.jpg"
        string_val: "input/training/n9/n9110.jpg"
        string_val: "input/training/n9/n9019.jpg"
        string_val: "input/training/n9/n9066.jpg"
        string_val: "input/training/n9/n9114.jpg"
        string_val: "input/training/n9/n9062.jpg"
        string_val: "input/training/n9/n9023.jpg"
        string_val: "input/training/n9/n9043.jpg"
        string_val: "input/training/n9/n9129.jpg"
        string_val: "input/training/n9/n9131.jpg"
        string_val: "input/training/n9/n9144.jpg"
        string_val: "input/training/n9/n9035.jpg"
        string_val: "input/training/n9/n9046.jpg"
        string_val: "input/training/n9/n9117.jpg"
        string_val: "input/training/n9/n9142.jpg"
        string_val: "input/training/n9/n9140.jpg"
        string_val: "input/training/n9/n9047.jpg"
        string_val: "input/training/n9/n9130.jpg"
        string_val: "input/training/n9/n9052.jpg"
        string_val: "input/training/n9/n9065.jpg"
        string_val: "input/training/n9/n9027.jpg"
        string_val: "input/training/n9/n9158.jpg"
        string_val: "input/training/n9/n9048.jpg"
        string_val: "input/training/n9/n9054.jpg"
        string_val: "input/training/n9/n917.jpg"
        string_val: "input/training/n9/n9037.jpg"
        string_val: "input/training/n9/n9153.jpg"
        string_val: "input/training/n9/n9045.jpg"
        string_val: "input/training/n9/n9128.jpg"
        string_val: "input/training/n9/n9022.jpg"
        string_val: "input/training/n9/n9053.jpg"
        string_val: "input/training/n9/n9067.jpg"
        string_val: "input/training/n9/n9124.jpg"
        string_val: "input/training/n9/n9115.jpg"
        string_val: "input/training/n9/n9055.jpg"
        string_val: "input/training/n9/n9050.jpg"
        string_val: "input/training/n9/n9031.jpg"
        string_val: "input/training/n9/n9136.jpg"
        string_val: "input/training/n9/n9127.jpg"
        string_val: "input/training/n9/n9143.jpg"
        string_val: "input/training/n9/n9161.jpg"
        string_val: "input/training/n9/n9126.jpg"
        string_val: "input/training/n9/n9125.jpg"
        string_val: "input/training/n9/n9018.jpg"
        string_val: "input/training/n9/n9014.jpg"
        string_val: "input/training/n9/n9044.jpg"
        string_val: "input/training/n9/n9038.jpg"
        string_val: "input/training/n9/n9141.jpg"
        string_val: "input/training/n9/n9060.jpg"
        string_val: "input/training/n9/n9017.jpg"
        string_val: "input/training/n9/n9032.jpg"
        string_val: "input/training/n9/n9151.jpg"
        string_val: "input/training/n9/n9061.jpg"
        string_val: "input/training/n9/n9145.jpg"
        string_val: "input/training/n9/n9154.jpg"
        string_val: "input/training/n9/n9137.jpg"
        string_val: "input/training/n9/n9163.jpg"
        string_val: "input/training/n9/n9058.jpg"
        string_val: "input/training/n9/n9113.jpg"
        string_val: "input/training/n9/n9132.jpg"
        string_val: "input/training/n9/n9135.jpg"
        string_val: "input/training/n9/n9120.jpg"
        string_val: "input/training/n9/n9148.jpg"
        string_val: "input/training/n9/n9057.jpg"
        string_val: "input/training/n9/n9159.jpg"
        string_val: "input/training/n9/n9029.jpg"
        string_val: "input/training/n9/n9139.jpg"
        string_val: "input/training/n9/n9116.jpg"
        string_val: "input/training/n9/n9041.jpg"
        string_val: "input/training/n9/n9122.jpg"
        string_val: "input/training/n9/n9146.jpg"
        string_val: "input/training/n9/n9025.jpg"
        string_val: "input/training/n9/n9059.jpg"
        string_val: "input/training/n9/n9064.jpg"
        string_val: "input/training/n9/n9033.jpg"
        string_val: "input/training/n9/n919.jpg"
        string_val: "input/training/n9/n9150.jpg"
        string_val: "input/training/n9/n9111.jpg"
        string_val: "input/training/n9/n9118.jpg"
        string_val: "input/training/n9/n9051.jpg"
        string_val: "input/training/n9/n9040.jpg"
        string_val: "input/training/n9/n915.jpg"
        string_val: "input/training/n9/n9152.jpg"
        string_val: "input/training/n9/n9147.jpg"
        string_val: "input/training/n9/n9020.jpg"
        string_val: "input/training/n9/n9134.jpg"
        string_val: "input/training/n9/n9112.jpg"
        string_val: "input/training/n9/n9156.jpg"
        string_val: "input/training/n9/n9036.jpg"
        string_val: "input/training/n9/n9157.jpg"
        string_val: "input/training/n9/n9063.jpg"
        string_val: "input/training/n9/n9138.jpg"
        string_val: "input/training/n9/n9049.jpg"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1096
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1096
          }
        }
        tensor_contentt\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000\t\000\000\000"
      }
    }
  }
}
node {
  name: "input_producer/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1096
      }
    }
  }
}
node {
  name: "input_producer/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/strided_slice"
  op: "StridedSlice"
  input: "input_producer/Shape"
  input: "input_producer/strided_slice/stack"
  input: "input_producer/strided_slice/stack_1"
  input: "input_producer/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "input_producer/input_producer/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/input_producer/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/input_producer/range"
  op: "Range"
  input: "input_producer/input_producer/range/start"
  input: "input_producer/strided_slice"
  input: "input_producer/input_producer/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "input_producer/input_producer/range"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "input_producer/input_producer"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "input_producer/input_producer"
  input: "input_producer/input_producer/RandomShuffle"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "input_producer/input_producer"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "input_producer/input_producer"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "input_producer/input_producer"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer/ToFloat"
  op: "Cast"
  input: "input_producer/input_producer/input_producer_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "input_producer/input_producer/mul"
  op: "Mul"
  input: "input_producer/input_producer/ToFloat"
  input: "input_producer/input_producer/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer/fraction_of_32_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_producer/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "input_producer/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "input_producer/input_producer/fraction_of_32_full/tags"
  input: "input_producer/input_producer/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer_Dequeue"
  op: "QueueDequeueV2"
  input: "input_producer/input_producer"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "input_producer/Gather"
  op: "Gather"
  input: "Const"
  input: "input_producer/input_producer_Dequeue"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "input_producer/Gather_1"
  op: "Gather"
  input: "Const_1"
  input: "input_producer/input_producer_Dequeue"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "ReadFile"
  op: "ReadFile"
  input: "input_producer/Gather"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "DecodeJpeg"
  op: "DecodeJpeg"
  input: "ReadFile"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "resize_images/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resize_images/ExpandDims"
  op: "ExpandDims"
  input: "DecodeJpeg"
  input: "resize_images/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "resize_images/size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "resize_images/ResizeBilinear"
  op: "ResizeBilinear"
  input: "resize_images/ExpandDims"
  input: "resize_images/size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "resize_images/Squeeze"
  op: "Squeeze"
  input: "resize_images/ResizeBilinear"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "resize_images/Squeeze"
  input: "Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "batch/fifo_queue"
  op: "FIFOQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch/fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "batch/fifo_queue"
  input: "Reshape"
  input: "input_producer/Gather_1"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch/fifo_queue_Close"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "batch/fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "batch/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "batch/fifo_queue_Size"
  op: "QueueSizeV2"
  input: "batch/fifo_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/ToFloat"
  op: "Cast"
  input: "batch/fifo_queue_Size"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "batch/mul"
  op: "Mul"
  input: "batch/ToFloat"
  input: "batch/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/fraction_of_32_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "batch/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "batch/fraction_of_32_full"
  op: "ScalarSummary"
  input: "batch/fraction_of_32_full/tags"
  input: "batch/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "batch"
  op: "QueueDequeueManyV2"
  input: "batch/fifo_queue"
  input: "batch/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "linear/linear_model/images/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "(\000\000\000\226\000\000\000\226\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/images/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/images/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/images/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/images/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/images/Shape"
  input: "linear/linear_model/images/strided_slice/stack"
  input: "linear/linear_model/images/strided_slice/stack_1"
  input: "linear/linear_model/images/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/images/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 67500
      }
    }
  }
}
node {
  name: "linear/linear_model/images/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/images/strided_slice"
  input: "linear/linear_model/images/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/images/Reshape"
  op: "Reshape"
  input: "batch"
  input: "linear/linear_model/images/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 67500
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/images/weights/part_0/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\254\007\001\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/images/weights/part_0/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/images/weights/part_0/Initializer/zeros"
  op: "Fill"
  input: "linear/linear_model/images/weights/part_0/Initializer/zeros/shape_as_tensor"
  input: "linear/linear_model/images/weights/part_0/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/images/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 67500
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/linear_model/images/weights/part_0/Assign"
  op: "Assign"
  input: "linear/linear_model/images/weights/part_0"
  input: "linear/linear_model/images/weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear_model/images/weights/part_0/read"
  op: "Identity"
  input: "linear/linear_model/images/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/images/weights"
  op: "Identity"
  input: "linear/linear_model/images/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/images/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/images/Reshape"
  input: "linear/linear_model/images/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/weighted_sum_no_bias"
  op: "Identity"
  input: "linear/linear_model/images/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0/Initializer/zeros"
  op: "Fill"
  input: "linear/linear_model/bias_weights/part_0/Initializer/zeros/shape_as_tensor"
  input: "linear/linear_model/bias_weights/part_0/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0/Assign"
  op: "Assign"
  input: "linear/linear_model/bias_weights/part_0"
  input: "linear/linear_model/bias_weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0/read"
  op: "Identity"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/bias_weights"
  op: "Identity"
  input: "linear/linear_model/bias_weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/weighted_sum"
  op: "BiasAdd"
  input: "linear/linear_model/weighted_sum_no_bias"
  input: "linear/linear_model/bias_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/bias/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bias"
      }
    }
  }
}
node {
  name: "linear/bias/values"
  op: "Pack"
  input: "linear/linear_model/bias_weights/part_0/read"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/bias"
  op: "HistogramSummary"
  input: "linear/bias/tag"
  input: "linear/bias/values"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/Reshape"
  op: "Reshape"
  input: "linear/linear_model/images/weights/part_0/read"
  input: "linear/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 675000
          }
        }
      }
    }
  }
}
node {
  name: "linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/concat"
  op: "Identity"
  input: "linear/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 675000
          }
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/Equal"
  op: "Equal"
  input: "linear/concat"
  input: "linear/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 675000
          }
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/Cast"
  op: "Cast"
  input: "linear/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 675000
          }
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/Mean"
  op: "Mean"
  input: "linear/zero_fraction/Cast"
  input: "linear/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/fraction_of_zero_weights/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/fraction_of_zero_weights"
      }
    }
  }
}
node {
  name: "linear/fraction_of_zero_weights"
  op: "ScalarSummary"
  input: "linear/fraction_of_zero_weights/tags"
  input: "linear/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/head/logits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "linear/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "linear/head/predictions/class_ids/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/head/predictions/class_ids"
  op: "ArgMax"
  input: "linear/linear_model/weighted_sum"
  input: "linear/head/predictions/class_ids/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "linear/head/predictions/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/head/predictions/ExpandDims"
  op: "ExpandDims"
  input: "linear/head/predictions/class_ids"
  input: "linear/head/predictions/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/predictions/str_classes"
  op: "AsString"
  input: "linear/head/predictions/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "linear/head/predictions/probabilities"
  op: "Softmax"
  input: "linear/linear_model/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "batch:1"
  input: "linear/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/labels/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/labels/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_rank_at_least/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "linear/head/labels/strided_slice/stack"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/head/labels/strided_slice"
  op: "StridedSlice"
  input: "linear/head/labels/Shape_1"
  input: "linear/head/labels/strided_slice/stack"
  input: "linear/head/labels/strided_slice/stack_1"
  input: "linear/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/head/labels/concat/values_1"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/head/labels/concat/axis"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/labels/concat"
  op: "ConcatV2"
  input: "linear/head/labels/strided_slice"
  input: "linear/head/labels/concat/values_1"
  input: "linear/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "linear/head/labels/concat"
  input: "linear/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Const"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/All"
  op: "All"
  input: "linear/head/labels/assert_equal/Equal"
  input: "linear/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "linear/head/labels/assert_equal/All"
  input: "linear/head/labels/assert_equal/Assert/Assert/data_0"
  input: "linear/head/labels/concat"
  input: "linear/head/labels/assert_equal/Assert/Assert/data_2"
  input: "linear/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "linear/head/labels"
  op: "Identity"
  input: "linear/head/labels/ExpandDims"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  input: "^linear/head/labels/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/assert_range/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Less"
  op: "Less"
  input: "linear/head/labels"
  input: "linear/head/assert_range/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/All"
  op: "All"
  input: "linear/head/assert_range/assert_less/Less"
  input: "linear/head/assert_range/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Label IDs must < n_classes"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (linear/head/labels:0) = "
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Assert/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (linear/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Label IDs must < n_classes"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (linear/head/labels:0) = "
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Assert/Assert/data_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (linear/head/assert_range/Const:0) = "
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_less/Assert/Assert"
  op: "Assert"
  input: "linear/head/assert_range/assert_less/All"
  input: "linear/head/assert_range/assert_less/Assert/Assert/data_0"
  input: "linear/head/assert_range/assert_less/Assert/Assert/data_1"
  input: "linear/head/assert_range/assert_less/Assert/Assert/data_2"
  input: "linear/head/labels"
  input: "linear/head/assert_range/assert_less/Assert/Assert/data_4"
  input: "linear/head/assert_range/Const"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "linear/head/assert_range/assert_non_negative/Const"
  input: "linear/head/labels"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "linear/head/assert_range/assert_non_negative/assert_less_equal/LessEqual"
  input: "linear/head/assert_range/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Label IDs must >= 0"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (linear/head/labels:0) = "
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Label IDs must >= 0"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (linear/head/labels:0) = "
      }
    }
  }
}
node {
  name: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  op: "Assert"
  input: "linear/head/assert_range/assert_non_negative/assert_less_equal/All"
  input: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_0"
  input: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_1"
  input: "linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert/data_2"
  input: "linear/head/labels"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "linear/head/assert_range/Identity"
  op: "Identity"
  input: "linear/head/labels"
  input: "^linear/head/assert_range/assert_less/Assert/Assert"
  input: "^linear/head/assert_range/assert_non_negative/assert_less_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "linear/head/assert_range/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "linear/linear_model/weighted_sum"
  input: "linear/head/sparse_softmax_cross_entropy_loss/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "linear/head/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "linear/head/sparse_softmax_cross_entropy_loss/Const"
  input: "^linear/head/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/head/ExpandDims"
  op: "ExpandDims"
  input: "linear/head/sparse_softmax_cross_entropy_loss/Mul"
  input: "linear/head/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "linear/head/weighted_loss/ToFloat_1/x"
  op: "Const"
  input: "^linear/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/Mul"
  op: "Mul"
  input: "linear/head/ExpandDims"
  input: "linear/head/weighted_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/Const"
  op: "Const"
  input: "^linear/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/Sum"
  op: "Sum"
  input: "linear/head/weighted_loss/Mul"
  input: "linear/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/ones_like"
  op: "Fill"
  input: "linear/head/ones_like/Shape"
  input: "linear/head/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/mul"
  op: "Mul"
  input: "linear/head/mul/x"
  input: "linear/head/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/Sum"
  op: "Sum"
  input: "linear/head/mul"
  input: "linear/head/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/truediv"
  op: "RealDiv"
  input: "linear/head/weighted_loss/Sum"
  input: "linear/head/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "linear/head/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "average_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "average_loss"
      }
    }
  }
}
node {
  name: "average_loss"
  op: "ScalarSummary"
  input: "average_loss/tags"
  input: "linear/head/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/gradients/Fill"
  op: "Fill"
  input: "linear/gradients/Shape"
  input: "linear/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "linear/gradients/Fill"
  input: "linear/gradients/linear/head/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "linear/gradients/linear/head/weighted_loss/Sum_grad/Reshape"
  input: "linear/gradients/linear/head/weighted_loss/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Shape"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "linear/gradients/linear/head/weighted_loss/Sum_grad/Tile"
  input: "linear/head/weighted_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Mul"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Sum"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "linear/head/ExpandDims"
  input: "linear/gradients/linear/head/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Mul_1"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Sum_1"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/gradients/linear/head/weighted_loss/Mul_grad/Reshape"
  input: "^linear/gradients/linear/head/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Reshape"
  input: "^linear/gradients/linear/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gradients/linear/head/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/Reshape_1"
  input: "^linear/gradients/linear/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gradients/linear/head/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "linear/gradients/linear/head/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "linear/gradients/linear/head/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "linear/gradients/linear/head/ExpandDims_grad/Reshape"
  input: "linear/head/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "linear/gradients/linear/head/ExpandDims_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/gradients/zeros_like"
  op: "ZerosLike"
  input: "linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/linear_model/weighted_sum_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/gradients/linear/linear_model/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^linear/gradients/linear/linear_model/weighted_sum_grad/BiasAddGrad"
}
node {
  name: "linear/gradients/linear/linear_model/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^linear/gradients/linear/linear_model/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gradients/linear/head/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/linear_model/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/gradients/linear/linear_model/weighted_sum_grad/BiasAddGrad"
  input: "^linear/gradients/linear/linear_model/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gradients/linear/linear_model/weighted_sum_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/linear_model/images/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/gradients/linear/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "linear/linear_model/images/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 67500
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/gradients/linear/linear_model/images/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/images/Reshape"
  input: "linear/gradients/linear/linear_model/weighted_sum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/gradients/linear/linear_model/images/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/gradients/linear/linear_model/images/weighted_sum_grad/MatMul"
  input: "^linear/gradients/linear/linear_model/images/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/gradients/linear/linear_model/images/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/gradients/linear/linear_model/images/weighted_sum_grad/MatMul"
  input: "^linear/gradients/linear/linear_model/images/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gradients/linear/linear_model/images/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 67500
          }
        }
      }
    }
  }
}
node {
  name: "linear/gradients/linear/linear_model/images/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/gradients/linear/linear_model/images/weighted_sum_grad/MatMul_1"
  input: "^linear/gradients/linear/linear_model/images/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/gradients/linear/linear_model/images/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/images/weights/part_0/Ftrl"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 67500
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/linear/linear_model/images/weights/part_0/Ftrl/Assign"
  op: "Assign"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl"
  input: "linear/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/linear_model/images/weights/part_0/Ftrl/read"
  op: "Identity"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/images/weights/part_0/Ftrl_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\254\007\001\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/images/weights/part_0/Ftrl_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/images/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Fill"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1/Initializer/zeros/shape_as_tensor"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/linear_model/images/weights/part_0/Ftrl_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 67500
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/linear/linear_model/images/weights/part_0/Ftrl_1/Assign"
  op: "Assign"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/linear_model/images/weights/part_0/Ftrl_1/read"
  op: "Identity"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl/Assign"
  op: "Assign"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  input: "linear/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl/read"
  op: "Identity"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Fill"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Initializer/zeros/shape_as_tensor"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Assign"
  op: "Assign"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/read"
  op: "Identity"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "linear/Ftrl/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "linear/Ftrl/l1_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/Ftrl/l2_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/Ftrl/l2_shrinkage_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/Ftrl/learning_rate_power"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "linear/Ftrl/update_linear/linear_model/images/weights/part_0/ApplyFtrl"
  op: "ApplyFtrl"
  input: "linear/linear_model/images/weights/part_0"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1"
  input: "linear/gradients/linear/linear_model/images/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/Ftrl/learning_rate"
  input: "linear/Ftrl/l1_regularization_strength"
  input: "linear/Ftrl/l2_regularization_strength"
  input: "linear/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/Ftrl/update_linear/linear_model/bias_weights/part_0/ApplyFtrl"
  op: "ApplyFtrl"
  input: "linear/linear_model/bias_weights/part_0"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  input: "linear/gradients/linear/linear_model/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/Ftrl/learning_rate"
  input: "linear/Ftrl/l1_regularization_strength"
  input: "linear/Ftrl/l2_regularization_strength"
  input: "linear/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/Ftrl/update"
  op: "NoOp"
  input: "^linear/Ftrl/update_linear/linear_model/images/weights/part_0/ApplyFtrl"
  input: "^linear/Ftrl/update_linear/linear_model/bias_weights/part_0/ApplyFtrl"
}
node {
  name: "linear/Ftrl/value"
  op: "Const"
  input: "^linear/Ftrl/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/Ftrl"
  op: "AssignAdd"
  input: "global_step"
  input: "linear/Ftrl/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^linear/linear_model/images/weights/part_0/Assign"
  input: "^linear/linear_model/bias_weights/part_0/Assign"
  input: "^linear/linear/linear_model/images/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/images/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/bias_weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/linear_model/images/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "global_step"
        string_val: "linear/linear_model/images/weights/part_0"
        string_val: "linear/linear_model/bias_weights/part_0"
        string_val: "linear/linear/linear_model/images/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/images/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/linear_model/images/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "global_step"
        string_val: "linear/linear_model/images/weights/part_0"
        string_val: "linear/linear_model/bias_weights/part_0"
        string_val: "linear/linear/linear_model/images/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/images/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
  input: "^init_3"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "input_producer/input_producer/fraction_of_32_full"
  input: "batch/fraction_of_32_full"
  input: "linear/bias"
  input: "linear/fraction_of_zero_weights"
  input: "loss"
  input: "average_loss"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_0472745116e343df84e0070a1fcdae29/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "global_step"
        string_val: "linear/linear_model/bias_weights"
        string_val: "linear/linear_model/bias_weights/part_0/Ftrl"
        string_val: "linear/linear_model/bias_weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/images/weights"
        string_val: "linear/linear_model/images/weights/part_0/Ftrl"
        string_val: "linear/linear_model/images/weights/part_0/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "67500 10 0,67500:0,10"
        string_val: "67500 10 0,67500:0,10"
        string_val: "67500 10 0,67500:0,10"
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "linear/linear_model/bias_weights/part_0/read"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl/read"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/read"
  input: "linear/linear_model/images/weights/part_0/read"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl/read"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1/read"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "global_step"
        string_val: "linear/linear_model/bias_weights"
        string_val: "linear/linear_model/bias_weights/part_0/Ftrl"
        string_val: "linear/linear_model/bias_weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/images/weights"
        string_val: "linear/linear_model/images/weights/part_0/Ftrl"
        string_val: "linear/linear_model/images/weights/part_0/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "67500 10 0,67500:0,10"
        string_val: "67500 10 0,67500:0,10"
        string_val: "67500 10 0,67500:0,10"
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "linear/linear_model/bias_weights/part_0"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "linear/linear_model/images/weights/part_0"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "linear/linear/linear_model/images/weights/part_0/Ftrl_1"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/images/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 67500
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 26
}
